AWSTemplateFormatVersion: '2010-09-09'
Description: 'Bitcoin Trading Bot Infrastructure Stack'

Parameters:
  DBPassword:
    NoEcho: true
    Type: String
    Description: PostgreSQL database password
    MinLength: 8
    MaxLength: 41

  EnvironmentName:
    Type: String
    Default: Production
    Description: Environment name for the application

Resources:
  # VPC and Network Resources
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true

  # Database Security Group
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow database access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref ApplicationSecurityGroup

  # Application Security Group
  ApplicationSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow web access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  # RDS Instance
  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: bitcoinbot
      Engine: postgres
      MasterUsername: postgres
      MasterUserPassword: !Ref DBPassword
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 20
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2

  # Elastic Beanstalk Application
  ElasticBeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: Bitcoin Trading Bot Application

  ElasticBeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref ElasticBeanstalkApplication
      EnvironmentName: !Ref EnvironmentName
      SolutionStackName: "64bit Amazon Linux 2023 running Python 3.9"
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: t3.micro
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: '1'
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: '2'
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DATABASE_URL
          Value: !Sub 'postgresql://${DatabaseInstance.MasterUsername}:${DBPassword}@${DatabaseInstance.Endpoint.Address}:${DatabaseInstance.Endpoint.Port}/${DatabaseInstance.DBName}'
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: PGHOST
          Value: !GetAtt DatabaseInstance.Endpoint.Address
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: PGPORT
          Value: !GetAtt DatabaseInstance.Endpoint.Port
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: PGUSER
          Value: postgres
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: PGDATABASE
          Value: bitcoinbot

Outputs:
  WebsiteURL:
    Description: Application URL
    Value: !GetAtt ElasticBeanstalkEnvironment.EndpointURL

  DatabaseEndpoint:
    Description: Database Endpoint
    Value: !GetAtt DatabaseInstance.Endpoint.Address

  DatabasePort:
    Description: Database Port
    Value: !GetAtt DatabaseInstance.Endpoint.Port